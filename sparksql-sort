# Sort orders by status

spark.sql('''select * from orders 
             order by order_status''').show()

#Sort orders by date and then by status

spark.sql('''select * from orders 
             order by order_date, order_status''').show()

# Sort order items by order_item_order_id and order_item_subtotal descending
spark.sql('''select * from order_items 
             order by order_item_order_id, order_item_subtotal desc''').show()

# Take daily product revenue data and 
# sort in ascending order by date and 
# then descending order by revenue.

spark.conf.set('spark.sql.shuffle.partitions', '2')

dailyProductRevenue = spark.sql('''select o.order_date, oi.order_item_product_id, 
             round(sum(oi.order_item_subtotal), 2) as revenue
             from orders o join order_items oi
             on o.order_id = oi.order_item_order_id
             where o.order_status in ("COMPLETE", "CLOSED")
             group by o.order_date, oi.order_item_product_id
             order by o.order_date, revenue desc''')

dailyProductRevenue.show()