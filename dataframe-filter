# Get orders which are either COMPLETE or CLOSED

orders.where('order_status = "COMPLETE" or order_status = "CLOSED"').show()
orders.where('order_status in ("COMPLETE", "CLOSED")').show()
orders.where((orders.order_status == 'COMPLETE') | (orders.order_status == 'CLOSED')).show()
orders.where((orders.order_status == 'COMPLETE').__or__(orders.order_status == 'CLOSED')).show()
orders.where(orders.order_status.isin('COMPLETE', 'CLOSED')).show()

# Get orders which are either COMPLETE or CLOSED and placed in month of 2013 August

orders.where('order_status in ("COMPLETE", "CLOSED") and order_date like "2013-08%"').show()
orders.where(orders.order_status.isin('COMPLETE', 'CLOSED').__and__(orders.order_date.like('2013-08%'))).show()

# Get order items where order_item_subtotal is not equal to product of order_item_quantity and order_item_product_price

orderItems.where('order_item_subtotal != round(order_item_quantity * order_item_product_price, 2)').show()
from pyspark.sql.functions import round
orderItems.where(orderItems.order_item_subtotal != 
                 round((orderItems.order_item_quantity * orderItems.order_item_product_price), 2)
                ).show()


# Get all the orders which are placed on first of every month

orders.where('date_format(order_date, "dd") = "01"').show()
from pyspark.sql.functions import date_format
orders.where(date_format(orders.order_date, 'dd') == '01').show()