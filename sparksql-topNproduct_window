# Get top n products per day

orders.createTempView('orders')
orderItems.createTempView('order_items')

spark.conf.set('spark.sql.shuffle.partitions', '2')

dailyProductRevenue = spark.sql('''select o.order_date, oi.order_item_product_id, 
             round(sum(oi.order_item_subtotal), 2) as revenue
             from orders o join order_items oi
             on o.order_id = oi.order_item_order_id
             where o.order_status in ("COMPLETE", "CLOSED")
             group by o.order_date, oi.order_item_product_id
             order by o.order_date, revenue desc''')

dailyProductRevenue.createTempView('daily_product_revenue')

topNDailyProducts = spark.sql('''select q.order_date, q.order_item_product_id, q.revenue
             from (select order_date, order_item_product_id, revenue,
                   rank() over (partition by order_date order by revenue desc) rnk
                   from daily_product_revenue) q
             where q.rnk <= %s
             order by q.order_date, q.revenue desc''' % topN)